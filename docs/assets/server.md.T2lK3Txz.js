import{_ as e,o,c as a,R as s}from"./chunks/framework.LBXiIpgL.js";const n="/assets/clear_storage.J5mVH-rh.png",m=JSON.parse('{"title":"Configuration de la base de donnée","description":"","frontmatter":{},"headers":[],"relativePath":"server.md","filePath":"server.md"}'),t={name:"server.md"},l=s(`<h1 id="configuration-de-la-base-de-donnee" tabindex="-1">Configuration de la base de donnée <a class="header-anchor" href="#configuration-de-la-base-de-donnee" aria-label="Permalink to &quot;Configuration de la base de donnée&quot;">​</a></h1><p>Le serveur utilise une base de donnée PostgreSQL. Il est donc nécessaire de l&#39;avoir installée sur sa machine.</p><h2 id="installation-de-postgresql" tabindex="-1">Installation de PostgreSQL <a class="header-anchor" href="#installation-de-postgresql" aria-label="Permalink to &quot;Installation de PostgreSQL&quot;">​</a></h2><p>Cliquez <a href="https://www.postgresql.org/download/" target="_blank" rel="noreferrer">ici</a> pour télécharger la version de PostgreSQL qui correspond à votre machine.</p><p>Lors de l&#39;installation, vous serez invité à configurer un utilisateur par défaut pour se connecter à la base de donnée. Utilisez l&#39;utilisateur <code>user</code> et le mot de passe <code>pass</code> pour simplifier la configuration de votre base de données locale.</p><h2 id="via-docker" tabindex="-1">Via Docker <a class="header-anchor" href="#via-docker" aria-label="Permalink to &quot;Via Docker&quot;">​</a></h2><p>Vous pouvez également télécharger l&#39;image Docker si vous le souhaitez avec la commande <code>docker pull postgres:16</code>.</p><p>Vous devez exposer le port <code>5432</code> et avoir les variables d&#39;environnements configurées avec les valeurs suivantes : <code>POSTGRES_USER</code>= <code>user</code><code>POSTGRES_PASSWORD</code> = <code>pass</code></p><h1 id="configuration-du-serveur" tabindex="-1">Configuration du serveur <a class="header-anchor" href="#configuration-du-serveur" aria-label="Permalink to &quot;Configuration du serveur&quot;">​</a></h1><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Le serveur se trouve dans le <em>repository</em> à l&#39;adresse <a href="https://github.com/ititp/commun-iti-server" target="_blank" rel="noreferrer">https://github.com/ititp/commun-iti-server</a>. Il s&#39;agit d&#39;un serveur Nodejs, qui nécessite que la dernière version de Nodejs soit installée sur votre machine.</p><p>Exécuter la commande <code>npm install</code> pour installer les dépendances du serveur.</p><p>Lancer le serveur avec la commande <code>npm run start</code>. Vous pouvez également utiliser le débugger de VS Code pour lancer le serveur.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Par défaut, le serveur se lance sur le port <code>3000</code> et utilise la chaine de connexion <code>postgresql://user:pass@localhost:5432/commun-iti-db</code> pour se connecter à la base de donnée.</p><p>Si vous souhaitez porter une modification de configuration, il vous suffit de renommer le fichier <code>.env.tpl</code> en <code>.env</code> et de changer les configurations désirées.</p><h1 id="configuration-de-l-application-vue" tabindex="-1">Configuration de l&#39;application Vue <a class="header-anchor" href="#configuration-de-l-application-vue" aria-label="Permalink to &quot;Configuration de l&#39;application Vue&quot;">​</a></h1><h2 id="implementation-des-services" tabindex="-1">Implémentation des services <a class="header-anchor" href="#implementation-des-services" aria-label="Permalink to &quot;Implémentation des services&quot;">​</a></h2><p>Pour que votre application puisse utiliser le serveur, il faut configurer le système d&#39;injection de dépendances pour que les services responsables de la gestion de la donnée, puissent passer d&#39;une implémentation basée sur le LocalStorage du navigateur à une implémentation qui passe par des appels HTTP au serveur.</p><p>Dans chacun des sous dossiers du dossier <code>src/modules</code> se trouve un fichier <code>config.ts</code> ex : <code>src/modules/user/config.ts</code>.</p><p>Remplacez l&#39;implémentation tous les services suffixés par &quot;API&quot; par l&#39;implémentation HTTP de cette façon :</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">configureUserContainer</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">container</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Container</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseModuleConfig</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// container.bind(UserAPI).to(LocalUserAPI); Version locale</span></span>
<span class="line"><span style="color:#E1E4E8;">  container.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(UserAPI).</span><span style="color:#B392F0;">toConstantValue</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HttpUserAPI</span><span style="color:#E1E4E8;">(config.http));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configureUserContainer</span><span style="color:#24292E;">(</span><span style="color:#E36209;">container</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Container</span><span style="color:#24292E;">, </span><span style="color:#E36209;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseModuleConfig</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// container.bind(UserAPI).to(LocalUserAPI); Version locale</span></span>
<span class="line"><span style="color:#24292E;">  container.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(UserAPI).</span><span style="color:#6F42C1;">toConstantValue</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HttpUserAPI</span><span style="color:#24292E;">(config.http));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Faite bien attention d&#39;utiliser la méthode <code>toConstantValue()</code> à la place de <code>to()</code> pour fournir une implémentation manuellement.</p></div><p>Remplacez donc :</p><ul><li><code>LocaUserAPI</code> avec <code>HttpUserAPI</code></li><li><code>LocalRoomAPI</code> avec <code>HttpRoomAPI</code></li><li><code>LocalStorageMessageAPI</code> avec <code>HttpMessageAPI</code></li><li><code>LocalStorageAuthenticationAPI</code> avec <code>HttpAuthenticationAPI</code></li></ul><h2 id="nettoyer-le-localstorage" tabindex="-1">Nettoyer le LocalStorage <a class="header-anchor" href="#nettoyer-le-localstorage" aria-label="Permalink to &quot;Nettoyer le LocalStorage&quot;">​</a></h2><p>La session de l&#39;utilisateur connecté étant stockée dans le localStorage, vous devez impérativement supprimer toute la donnée stockée par votre navigateur lorsque vous passez de l&#39;implémentation locale à l&#39;implémentation HTTP.</p><p>Pour ce faire ouvrez les DevTools de votre navigateur (F12) et naviguez dans l&#39;onglet &quot;Application&quot; :</p><p><img src="`+n+'" alt="clear storage"></p><p>Cliquez sur la section &quot;Storage&quot; dans le volet de gauche puis sur le bouton &quot;Clear site data&quot;;</p><h2 id="configurer-l-url-du-serveur" tabindex="-1">Configurer l&#39;URL du serveur <a class="header-anchor" href="#configurer-l-url-du-serveur" aria-label="Permalink to &quot;Configurer l&#39;URL du serveur&quot;">​</a></h2><p>L&#39;application se connecte par défaut au serveur à l&#39;adresse <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a>.</p><p>Si vous désirez changer l&#39;URL, vous pouvez, comme pour le serveur, ajouter un fichier .env avec la configuration suivante :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">VITE_SERVER_URL=http://localhost:8000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">VITE_SERVER_URL=http://localhost:8000</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Notez que quelque soit le projet, client ou serveur, le fichier <code>.env</code> qui permet de configurer les variables d&#39;environnements de votre application ne doit <strong>jamais</strong> être <em>commit</em>.</p></div>',35),r=[l];function i(c,p,d,u,h,v){return o(),a("div",null,r)}const f=e(t,[["render",i]]);export{m as __pageData,f as default};
